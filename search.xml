<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[稀疏数组]]></title>
    <url>%2F2019%2F07%2F15%2F%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"><![CDATA[稀疏数组先看一个实际的需求编写的五子棋程序中，有存盘退出和续上盘的功能。分析问题:因为该二维数组的很多值是默认值0, 因此记录了很多没有意义的数据.-&gt;稀疏数组。 稀疏数组介绍基本介绍当一个数组中大部分元素为０，或者为同一个值的数组时，可以使用稀疏数组来保存该数组。稀疏数组的处理方法是:1）记录数组一共有几行几列，有多少个不同的值2）把具有不同值的元素的行列及值记录在一个小规模的数组中，从而缩小程序的规模 稀疏数组举例说明 应用实例1）使用稀疏数组，来保留类似前面的二维数组(棋盘、地图等等)2）把稀疏数组存盘，并且可以从新恢复原来的二维数组数3）整体思路分析 二维数组和稀疏数组相互转化二维数组 转 稀疏数组的思路 遍历 原始的二维数组，得到有效数据的个数 sum 根据sum 就可以创建 稀疏数组 sparseArr int[sum + 1] [3] 将二维数组的有效数据数据存入到 稀疏数组 稀疏数组转原始的二维数组的思路 先读取稀疏数组的第一行，根据第一行的数据，创建原始的二维数组，比如上面的 chessArr2 = int [11][11] 在读取稀疏数组后几行的数据，并赋给 原始的二维数组 即可. 代码实现1234567891011121314151617181920212223242526272829//将二位数组转化成稀疏数组 public static int[][] parseSparseArray(int[][] array)&#123; //sum用来记录有几个非0值 int sum = 0; for (int i = 0; i &lt; array.length; i++) &#123; for (int j = 0; j &lt; array.length; j++) &#123; if (array[i][j]!=0)&#123; sum ++; &#125; &#125; &#125; int[][] sparseArray = new int[sum+1][3]; sparseArray[0][0] = array.length; sparseArray[0][1] = array[0].length; sparseArray[0][2] = sum; //count用来记录是稀疏数组的哪一行 int count = 0; for (int i = 0; i &lt; array.length; i++) &#123; for (int j = 0; j &lt; array.length; j++) &#123; if (array[i][j]!=0)&#123; count++; sparseArray[count][0] = i; sparseArray[count][1] = j; sparseArray[count][2] = array[i][j]; &#125; &#125; &#125; return sparseArray; &#125; 123456789//将稀疏数组转化为二维数组 public static int[][] toArray(int[][] sparseArray)&#123; int[][] array = new int[sparseArray[0][0]][sparseArray[0][1]]; //更改二位数组中应该非0的值 for (int i = 1; i &lt; sparseArray.length; i++) &#123; array[sparseArray[i][0]][sparseArray[i][1]] = sparseArray[i][2]; &#125; return array; &#125;]]></content>
      <categories>
        <category>java数据结构和算法</category>
      </categories>
      <tags>
        <tag>-数据结构 -算法 -稀疏数组</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构和算法的关系]]></title>
    <url>%2F2019%2F07%2F15%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95%E7%9A%84%E5%85%B3%E7%B3%BB%2F</url>
    <content type="text"><![CDATA[数据结构和算法的关系1）数据data结构(structure)是一门研究组织数据方式的学科，有了编程语言也就有了数据结构.学好数据结构可以编写出更加漂亮,更加有效率的代码。2）要学习好数据结构就要多多考虑如何将生活中遇到的问题,用程序去实现解决.3）程序 = 数据结构 + 算法4）数据结构是算法的基础, 换言之，想要学好算法，需要把数据结构学到位。 线性结构和非线性结构数据结构包括：线性结构和非线性结构。 线性结构1）线性结构作为最常用的数据结构，其特点是数据元素之间存在一对一的线性关系。2）线性结构有两种不同的存储结构，即顺序存储结构和链式存储结构。顺序存储的线性表称为顺序表，顺序表中的存储元素是连续的。3）链式存储的线性表称为链表，链表中的存储元素不一定是连续的，元素节点中存放数据元素以及相邻元素的地址信息。4）线性结构常见的有：数组、队列、链表和栈。 非线性结构非线性结构包括：二维数组，多维数组，广义表，树结构，图结构]]></content>
      <categories>
        <category>java数据结构和算法</category>
      </categories>
      <tags>
        <tag>-数据结构 -算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F14%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[计算机基础知识]]></title>
    <url>%2F2019%2F07%2F11%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[二进制 计算机中的数据不同于人们生活中的数据，人们生活采用十进制数，而计算机全部采用二进制数表示，它只包含0、1两个数，逢二进一，1+1=10。每一个0或者每一个1，叫做一个bit（比特，位）。十进制转换二进制 除以2 取余 反向读二进制转换十进制 从右往左数字乘以2^0 + 数字乘以2^1 + … + 数字乘以2^n 字节字节是我们常见的计算机中最小存储单元。计算机存储任何的数据，都以字节的形式存储，右键文件属性，我们可以直接查看文件的字节大小。8个bit（二进制位）0000-0000表示为1个字节，写成1byte或者1B。·8bit = 1Byte·1024B = 1KB·1024MB = 1GB·1024GB = 1TB 常见DOS命令MS-DOS(Microsoft Disk Operating System)微软磁盘操作系统cmd(命令提示符)启动：Win+R 》》输入cmd回车x: 切换到盘符xcd + 路径跳转到目录（tab键可以自动补全路径）cd ..返回上一级目录cd \ 返回根目录dir 显示文件夹中的所有文件信息cls 清屏exit 退出cmd]]></content>
      <categories>
        <category>计算机基础知识计算机基础知识</category>
      </categories>
      <tags>
        <tag>进制</tag>
        <tag>计算机常识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java环境搭建]]></title>
    <url>%2F2019%2F07%2F11%2Fjava%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[java虚拟机—–JVM·JVM(Java Vrtual Mechine)：java虚拟机，简称JVM.是运行所有java程序的假想计算机，是java程序的运行环境，是java最具有吸引力 特性之一。我们编写的代码，都运行在JVM之上。·跨平台：任何软件的运行，都必须要运行在操作系统上，而我们用java编写的软件可以运行在任何的操作系统上，这个特性称为java语言的跨平台特性。该特性是由JVM实现的，我们编写的程序运行在JVM上，而JVM运行在操作系统上。 JRE和JDK·JRE(Java Runtime Environment)：是java程序的运行时环境，包含JVM和运行时所需要的核心类库。·JDK(Java Development Kit)：是java程序开发工具包，包含JRE和开发人员使用的工具。我们想要运行已有的一个java程序，那么只需安装JRE即可。我们想要开发一个全新的java程序，那么必须安装JDK。 下载安装JDK（以JDK1.8为例子，因为该版本使用量较大） Oracle首页 选择jdk1.8版本下载 点击Download 先勾选接受 后选择符合你系统的版本 最后登录Oracle账号就会自动下载了，没有账号的可以百度搜索一个。 双击下载好的jdk就可以安装 jdk中包含JRE不需要额外在安装一个独立的JRE 安装路径最好不要有中文和空格，一定要记住你的安装路径！！！！！！！！！！！后面会用到 安装完毕后 右键此电脑==》属性 按图中标号依次点击 按图中标号依次点击，最后选择你的jdk根目录 按图中标号依次点击和输入 打开命令提示符，输入红框中的内容，与图一致则完成配置]]></content>
      <categories>
        <category>java开发环境搭建</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
</search>
